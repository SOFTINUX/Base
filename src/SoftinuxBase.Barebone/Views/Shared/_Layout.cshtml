@*
    Copyright © 2017 SOFTINUX. All rights reserved.
    Licensed under the MIT License, Version 2.0. See License.txt in the project root for license information.
*@

@using Microsoft.Extensions.Options;
@using SoftinuxBase.Infrastructure
@using SoftinuxBase.Barebone.Tools;
@inject IOptions<CorporateConfiguration> OptionsApplicationConfiguration

<!DOCTYPE html>
<html
    @if (!User.Identity.IsAuthenticated)
    {
        @Html.Raw("class=\"login-page\"")
    }
    lang="en" style="height: auto;">
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>@Html.Raw(ViewBag.Title as string)</title>
    @await Component.InvokeAsync("StyleSheets")
    @RenderSection("Styles", false)
</head>
@{
    string authClass = "";
    authClass = !User.Identity.IsAuthenticated ? "hold-transition login-page" : "sidebar-mini";
    // use typed "properties" variable else the compiler isn't able to understand the LINQ expression.
    System.Reflection.PropertyInfo[] properties = Model?.GetType().GetProperties();
    bool hasModelWithErrorMessageProperty = properties != null && properties.Where(p => p.Name.Equals("ErrorMessage")).Any();
}
<body class="@authClass">
<div class="wrapper"
@if (!User.Identity.IsAuthenticated)
{
    @Html.Raw("style=\"background-image: url('" + OptionsApplicationConfiguration.Value.LoginBackgroundImage + "'); background-size: cover;\"")
}>
@if (User.Identity.IsAuthenticated)
{
    @* NavBar *@
    <nav class="main-header navbar navbar-expand navbar-white navbar-light">
        @* Left navbar links *@
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" data-widget="pushmenu" href="#">
                    <i class="fas fa-bars"></i>
                </a>
            </li>
            <li class="nav-item d-none d-sm-inline-block">
                <a href="#" class="nav-link">Home</a>
            </li>
            <li class="nav-item d-none d-sm-inline-block">
                <a href="#" class="nav-link">Contact</a>
            </li>
        </ul>
        @* Search Form *@
        <form class="form-inline ml-3">
            <div class="input-group input-group-sm">
                <input class="form-control form-control-navbar" type="search" placeholder="Search" aria-label="Search">
                <div class="input-group-append">
                    <button class="btn btn-navbar" type="submit">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        @* Right navbar link *@
        <ul class="navbar-nav ml-auto">
            @* Messages Dropdown Menu *@
            <li class="nav-item dropdown">
                <a class="nav-link" data-toggle="dropdown" href="#">
                    <i class="far fa-comments"></i>
                    <span class="badge badge-danger navbar-badge"></span>
                </a>
                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                    <div class="dropdown-divider"></div>
                    <a href="#" class="dropdown-item dropdown-footer">See All Messages</a>
                </div>
            </li>
            @* Notifications Dropdown Menu *@
            <li class="nav-item dropdown">
                <a class="nav-link" data-toggle="dropdown" href="#">
                    <i class="far fa-bell"></i>
                    <span class="badge badge-warning navbar-badge"></span>
                </a>
                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right">
                </div>
            </li>
            @* square icon *@
            <li class="nav-item">
                <a class="nav-link" data-widget="control-sidebar" data-slide="true" href="#">
                    <i class="fas fa-th-large"></i>
                </a>
            </li>
        </ul>
    </nav>

    <aside class="main-sidebar sidebar-dark-primary elevation-4">
        @* Brand Logo *@
        <a href="#" class="brand-link">
            <img src="/img/@Html.Raw(OptionsApplicationConfiguration.Value.BrandLogo)" class="brand-image img-circle elevation-3" alt="Brand Logo">
            @* TODO add brand title here *@
            <span class="brand-text font-weight-light">@OptionsApplicationConfiguration.Value.Name</span>
        </a>
        @* Side bar *@
        <div class="sidebar">
            @* Sidebar use panel *@
            <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                <div class="image">
                    <img src="/img/profile-circle2-128.png" class="img-circle elevation-2" alt="User Image">
                </div>
                <div class="info">
                    <a href="@Url.Action("UpdateProfile", "Account")" class="d-block">@User.Identity.Name</a>
                </div>
            </div>
            @* Side menu *@
            <nav class="mt-2">
                <ul class="sidebar-menu tree" data-widget="tree">
                    @* <li class="header">HEADER</li> *@
                    @await Component.InvokeAsync("Menu")
                </ul>
            </nav>
        </div>
    </aside>
    @* Content Wrapper. Contains page content *@
    <div class="content-wrapper">

        @if (@Html.IsDebug())
        {
            <partial name="_IsDebugBanner"/>
        }
        @* Content Header (Page header) *@
        <section class="content-header">
            <h1>
                @RenderSection("title", false)
                @*<small></small>*@
            </h1>
        </section>
        @* Main content *@
        <section class="content container-fluid">
            @RenderBody()
        </section>
        @* /.content *@
    </div>
    <aside class="control-sidebar control-sidebar-dark" style="display: block;">
        <!-- Control sidebar content goes here -->
        <div class="p-3">
            <a href="@Url.Action("SignOut", "Account")"><i class="fas fa-power-off"></i> Logout</a>
        </div>
    </aside>
}
else
{
    @RenderBody()
}

@* Error Message On SignIn or other action Fail *@
@if (Model != null && hasModelWithErrorMessageProperty && !String.IsNullOrEmpty(Model.ErrorMessage))
{
    <div id="notification" class="show">
        <div class="alert alert-danger" role="alert">
            <i class="icon fa fa-ban"></i><strong>ERROR:</strong>&nbsp;@Html.Raw(Model.ErrorMessage)
        </div>
    </div>
}

@if (User.Identity.IsAuthenticated)
{
    @* Main Footer *@
    <footer class="main-footer">
        @* To the right *@
        <div class="pull-right hidden-xs">
            DEMO
        </div>
        @* Default to the left *@
        <strong>Copyright &copy; 2017 <a href="about">SOFTINUX</a>.</strong> All rights reserved.
    </footer>
}
</div>
@await Component.InvokeAsync("Scripts")
@if (!User.Identity.IsAuthenticated)
{
    <script type="text/javascript">
            $("input").keypress(function (event) {
                if (event.which == 13) {
                    event.preventDefault();
                    $("form").submit();
                }
            });
        </script>
}
@if (User.Identity.IsAuthenticated)
{
    @RenderSection("Scripts", false)
}
@RenderSection("ScriptsUnauthenticated", false)
</body>
</html>