@* Copyright Â© 2017-2019 SOFTINUX. All rights reserved.
    Licensed under the MIT License, Version 2.0. See License.txt in the project root for license information.

    <reference path='../../SoftinuxBase.Barebone/Scripts/barebone_press_and_hold.js' />
*@
@using System.Diagnostics

@section title {
    Roles & Permissions
}

@{
    string inputExtendAttributes = "onCopy=\"return false;\" onDrag=\"return false;\" onDrop=\"return false;\" onPaste=\"return false;\" autocomplete=off";
}

@section Styles {
    <style>
        .holdButtonProgress {
            height: 5px !important;
        }
    </style>
}

<div class="row">
    <div class="col-md-12">
        @* box roles *@
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Manage Roles</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                @* BUTTONS *@
                <div class="nav-tabs-custom nav-tab-custom-dropshadow">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a id="add-role-tab-link" href="#add-role-tab" data-toggle="tab" aria-expanded="true">Add Role</a>
                        </li>
                        <li>
                            <a id="edit-role-tab-link" href="#edit-role-tab" data-toggle="tab" aria-expanded="true">Edit Role</a>
                        </li>
                        <li>
                            <a id="bulk-delete-role-tab-link" href="#bulk-delete-role-tab" data-toggle="tab" aria-expanded="true">Bulk Delete</a>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane active" id="add-role-tab">
                            @* ADD ROLE *@
                            <div class="row" id="add-role-area">
                                <div class="col-md-12">
                                    <form name="add-new-role-form" onsubmit="return false">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group" id="add-role-group">
                                                    <div class="input-group margin">
                                                        <label for="role_name_input">New role name:</label>
                                                        <div class="input-group">
                                                            <input required id="role_name_input" name="role_name_input" type="text" class="form-control" placeholder="enter role name here" size="80" @Html.Raw(inputExtendAttributes)>
                                                            <div class="input-group-btn bs-dropdown-to-select-acl-group">
                                                                <input type="hidden" name="acl-selected_value" id="newRolePermission" data-bind="bs-drp-sel-acl-value" value="1">
                                                                <button class="btn btn-default dropdown-toggle bs-dropdown-to-select-acl" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                    <span data-bind="bs-drp-sel-acl-label">Read</span>
                                                                    <span class="caret"></span>
                                                                    <span class="sr-only">Toggle Dropdown</span>
                                                                </button>
                                                                <ul id="acl-sel" class="dropdown-menu dropdown-menu-right" role="menu">
                                                                    <li data-permissionlvl="0"><a href="#">None</a></li>
                                                                    <li data-permissionlvl="1"><a href="#">Read</a></li>
                                                                    <li data-permissionlvl="2"><a href="#">Write</a></li>
                                                                    <li role="separator" class="divider"></li>
                                                                    <li data-permissionlvl="4"><a href="#">Admin</a></li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                        <span class="help-block"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-5">
                                                <div class="form-group margin">
                                                    <label>Available extension(s):</label>
                                                    <select class="form-control" multiple id="addRoleLeftExtensionsList">
                                                        @await Component.InvokeAsync("AddRoleListExtensions")
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-md-2 pagination-centered text-center">
                                                <div class="btn-group-vertical">
                                                    <button class="btn btn-default" type="button" id="addRoleBtnRight" data-fromlist="addRoleLeftExtensionsList" data-tolist="addRoleRightExtensionsList"><i class="fa fa-angle-right"></i></button>
                                                    <button class="btn btn-default" type="button" id="addRoleBtnAllRight" data-fromlist="addRoleLeftExtensionsList" data-tolist="addRoleRightExtensionsList" data-bulk-move><i class="fa fa-angle-double-right"></i></button>
                                                </div>
                                                <br />
                                                <br />
                                                <div class="btn-group-vertical">
                                                    <button class="btn btn-default" type="button" id="addRoleBtnAllLeft" data-fromlist="addRoleRightExtensionsList" data-tolist="addRoleLeftExtensionsList" data-bulk-move><i class="fa fa-angle-double-left"></i></button>
                                                    <button class="btn btn-default" type="button" id="addRoleBtnLeft" data-fromlist="addRoleRightExtensionsList" data-tolist="addRoleLeftExtensionsList"><i class="fa fa-angle-left"></i></button>
                                                </div>
                                            </div>
                                            <div class="col-md-5">
                                                <div class="form-group margin">
                                                    <label>Selected extension(s):</label>
                                                    <select class="form-control" multiple="" id="addRoleRightExtensionsList" name="selectedExtensions">
                                                        @* here selected extensions options filled by javascript *@
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="dottedLine15"></div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="margin">
                                                <div class="col-md-12">
                                                    @* save btn *@
                                                    <div class="btn-group">
                                                        <button class="btn btn-block btn-success" id="save-add-role-btn" type="button">Save</button>
                                                    </div>
                                                    @* cancel btn *@
                                                    <div class="btn-group">
                                                        <button class="btn btn-block btn-primary" id="cancel-add-role-btn" type="reset">Reset</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="edit-role-tab">
                            @* EDIT ROLE *@
                            <form name="edit-role-form" onsubmit="return false">
                                @await Component.InvokeAsync("EditRolePermissions")
                            </form>
                        </div>
                        <div class="tab-pane" id="bulk-delete-role-tab">
                            @* BULK DELETE ROLE *@
                            <form name="bulk-delete-form" onsubmit="return false">
                                <select class="form-control" id="availableRolesForDelete" multiple>
                                    @* here roles list *@
                                    @await Component.InvokeAsync("SelectOptionsListRoles")
                                </select>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="dottedLine15"></div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="margin">
                                        <div class="col-md-12">
                                            @* delete btn *@
                                            <div class="btn-group">
                                                <button class="btn btn-block btn-danger" id="bulk-delete-btn" type="button">DELETE</button>
                                            </div>
                                            @* cancel btn *@
                                            <div class="btn-group">
                                                <button class="btn btn-block btn-primary" id="cancel-bulk-delete-btn">Reset</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* box listing roles *@
        <div class="box">
            <div class="box-header">
                <h3>Roles List</h3>
            </div>
            <div class="box-body">
                <section class="content">
                    <div class="row">
                        @* header *@
                        <div class="col-lg-8 col-md-12 col-sm-12 col-xs-12">
                            <div class="row table-header collapsed">
                                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1 table-header-cell" id="collapse" data-state="closed">
                                    <i class="chevron-double fa fa-fw"></i>
                                </div>
                                <div class="col-lg-4 col-md-5 col-sm-5 col-xs-4 table-header-cell" align="center">Extension name</div>
                                <div class="col-lg-1 col-md-2 col-sm-2 col-xs-2 table-header-cell">Admin</div>
                                <div class="col-lg-1 col-md-2 col-sm-2 col-xs-2 table-header-cell">Write</div>
                                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1 table-header-cell">Read</div>
                                @* empty row for unlink icon in role row *@
                                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1 table-header-cell">&nbsp;</div>
                            </div>
                        </div>
                    </div>
                    @* List extensions and roles *@
                    <div id="GrantPermissionsTable">
                        @await Component.InvokeAsync("GrantPermissions")
                    </div>
                </section>
            </div>
        </div>
        @* /.box *@
    </div>
</div>

@* Modal for remove role *@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div id="login-overlay" class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header model-header-custom">
                <button type="button" class="btn btn-xs pull-right alert-default alert-danger-default" data-dismiss="modal"><strong>Close</strong></button>
                <h4 class="modal-title" id="myModalLabel" style="font-size: 12pt;"><i class="fa fa-warning"></i>&nbsp;&nbsp;<strong>CONFIRM UNLINK ROLE</strong></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">You are about to unlink the <strong><span id="selectedRoleName"></span></strong> role for :</div>
                </div>
                <div class="row top-buffer">
                    <div class="col-md-12 vertical-align-center">
                        <span class="valign-center">&#9679; module: <strong><span id="moduleName"></span></strong></span>
                        <button Id="removeForModule" class="btn btn-default pull-right"><span aria-hidden="true"><i class="fa fa-trash-o"></i></span>&nbsp; Unlink for this module</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12"><hr /></div>
                </div>
                <div class="row">
                    <div class="col-md-12 vertical-align-center">
                        <span class="valign-center">&#9679; all modules!</span>
                        <button id="removeForAllModules" class="btn btn-danger pull-right removeAllRoles"><span aria-hidden="true"><i class="fa fa-trash-o" style="color: #ffffff;"></i></span>&nbsp; Unlink on all modules</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @* ReSharper disable once Html.PathError (from Security.Barebone's scripts) *@
    <script src="/Scripts/toolbox.js" type="module"></script>
    @if (Debugger.IsAttached)
    {
        <script src="/Scripts/security_user_permissions.js" type="module"></script>
    }
    else
    {
        <script src="/Scripts/security_user_permissions.min.js" type="module"></script>
    }
    <script type="module">
        import pressAndHold from '/Scripts/barebone_press_and_hold.js';

            var SuccessMessage = "@(ViewBag.SuccessMessage)";
            window.StopAccordionsPropagation = function(e) {
                console.log('StopAccordionsPropagation');
                e.stopPropagation();
            };

            @* begin pressAndHold block *@
            Array.from(document.querySelectorAll(".removeAllRoles")).forEach(
                (element) => {
                    pressAndHold(element, {
                        holdTime: 1000,
                        progressIndicatorRemoveDelay: 900,
                        progressIndicatorColor: "#FFFFFF;",
                        progressIndicatorOpacity: 1,
                        progressIndicatorPosition: "bottom"
                    });
                }
            );

            Array.from(document.querySelectorAll(".removeAllRoles")).forEach(
                (element) => {
                    addEventListener("complete.pressAndHold", event_ => {
                        @* deleteRole(); *@
                        console.log("");
                        console.log("complete");
                        @* TODO hide the modal $('#myModal').modal('hide'); *@
                    });
                }
            );
            @* end pressAndHold block *@
    </script>
}