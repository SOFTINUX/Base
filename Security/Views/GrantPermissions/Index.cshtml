@* Copyright Â© 2017 SOFTINUX. All rights reserved.
    Licensed under the MIT License, Version 2.0. See License.txt in the project root for license information.
*@
@using Security.Common.Enums
@using Newtonsoft.Json
@model Security.ViewModels.Permissions.GrantViewModel

@section title {
    <h2>Roles & Permissions</h2>
}

@section Styles {
    <link rel="stylesheet" href="/dataTables.bootstrap.css" type="text/css">
    <link rel="stylesheet" href="/select.bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/buttons.bootstrap.min.css" type="text/css">
}
@{
    var modelAsJson = JsonConvert.SerializeObject(Model.PermissionsByRoleAndScope);
}

@* https://datatables.net/examples/advanced_init/html5-data-attributes.html
    interesting for adding sorting/filtering capabilities to columns that will be rendered by a checkbox.
*@

<div class="row">
    <div class="col-md-12">
        @* box roles *@
        <div class="box">
            <div class="box-header with-border">
                Manage Roles
            </div>
            <div class="box-body">
                <div class="margin">
                    <div class="btn-group">
                        <button id="add-role" type="button" class="btn btn-block btn-default">Add role</button>
                    </div>
                    <div class="btn-group">
                        <button id="edit-role" type="button" class="btn btn-block btn-default">Edit role</button>
                    </div>
                    <div class="btn-group">
                        <button id="delete-role" type="button" class="btn btn-block btn-danger">Delete role</button>
                    </div>
                </div>

                <div class="row hidden" id="add-role-field">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-12">
                                New role:
                                <div class="input-group margin ">
                                    <input id="role_name_input" type="text" class="form-control" placeholder="enter role name here" size="80">
                                    <div class="input-group-btn">
                                        <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="fa fa-caret-down"></span>
                                            <span>Read</span>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <a href="#">None</a>
                                            </li>
                                            <li>
                                                <a href="#">Read</a>
                                            </li>
                                            <li>
                                                <a href="#">Write</a>
                                            </li>
                                            <li role="separator" class="divider"></li>
                                            <li>
                                                <a href="#">Admin</a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label>Available extension(s)</label>
                                    <select class="form-control" multiple="">
                                        @* here options *@
                                        @{ 
                                            foreach (Infrastructure.Interfaces.IExtensionMetadata extensionMetadata in ExtCore.Infrastructure.ExtensionManager.GetInstances<Infrastructure.Interfaces.IExtensionMetadata>())
                                            {
                                                if (extensionMetadata.IsAvailableForPermissions)
                                                {
                                        <option value="@Html.Raw(Infrastructure.Extensions.TypeExtensions.GetScope(extensionMetadata))">@Html.Raw(Infrastructure.Extensions.TypeExtensions.GetScope(extensionMetadata))</option>
                                                }
                                                
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2 pagination-centered text-center">
                                <div class="btn-group-vertical ">
                                    <button class="btn btn-default" type="button"><i class="fa fa-angle-right"></i></button>
                                    <button class="btn btn-default" type="button"><i class="fa fa-angle-double-right"></i></button>
                                </div>
                                <br />
                                <br />
                                <div class="btn-group-vertical ">
                                    <button class="btn btn-default" type="button"><i class="fa fa-angle-double-left"></i></button>
                                    <button class="btn btn-default" type="button"><i class="fa fa-angle-left"></i></button>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label>Selected extension(s)</label>
                                    <select class="form-control" multiple="">
                                        @* here selected extensions options *@
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="margin">
                                <div class="col-md-12">
                                    @* save btn *@
                                    <div class="btn-group">
                                        <button class="btn btn-block btn-success" id="save-role-btn">Save</button>
                                    </div>
                                    @* cancel btn *@
                                    <div class="btn-group">
                                        <button class="btn btn-block btn-danger" id="cancel-role-btn">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        @* box listing roles *@
        <div class="box">
            <div class="box-header">
                Roles List
            </div>
            <div class="box-body">
                <section class="content">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row table-header collapsed">
                                <div class="col-md-1 table-header-cell" id="collapse">
                                    <i class="chevron-double fa fa-fw"></i>
                                </div>
                                <div class="col-md-4 table-header-cell" align="center">Extension name</div>
                                <div class="col-md-1 table-header-cell">&nbsp;</div>
                                <div class="col-md-1 table-header-cell">Admin</div>
                                <div class="col-md-1 table-header-cell">Write</div>
                                <div class="col-md-1 table-header-cell">Read</div>
                            </div>
                        </div>
                    </div>
                    @* List extensions and roles *@
                    @Html.Partial("_List_Roles_Extensions", Model)
                </section>
            </div>
        </div>
        @* /.box *@
    </div>
</div>

@section Scripts {
    @* <script type="text/javascript" src="/node_modules.icheck.icheck.js"></script> *@
    <script>

        window.StopAccordionsPropagation = function (e) {
            e.stopPropagation();
        }

        $(function () {
            toastr.options.positionClass = 'toast-top-right';

            $('#add-role').click(function (event) {
                if ($("#add-role-field").hasClass("hidden"))
                    $("#add-role-field").removeClass("hidden");
                else
                    $("#add-role-field").addClass("hidden");
            });

            $('#save-role-btn').click(function (event) {
                console.log($("#role_name_input").val());
                if (!$("#role_name_input").val()) {
                    toastr.error('No role given.', 'Role not saved!');
                    return;
                }
                toastr.success('role saved.');
            });

            $('#collapse').on('click', function () {
                $('.extension-row').each(function() {
                    if ($(this).hasClass('collapsed'))
                    {
                        $(this).removeClass('collapsed');
                        $(this).data('aria-expended', 'true');
                        $('.row.collapse').each(function() {
                            $(this).toggleClass('in')
                        })
                    }
                    else{
                        $(this).toggleClass('collapsed');
                        $(this).data('aria-expended', 'false');
                        $('.row.collapse').each(function() {
                            $(this).removeClass('in')
                        })
                    }
                });
            });

            $(document).ready(function () {
                // nothing yet
            });

        });

        function checkClick() {
            var splitted = $(event.target)[0].id.split('_');
            var base = splitted[0] + "_" + splitted[1];
            var activeCheckedPermissions = "NEVER";

            if(event.target.checked) {
                // when checking, impacted checkboxes become checked and disabled
                switch (splitted[2]) {
                    case "ADMIN":
                        $("#" + base + "_WRITE, #" + base + "_READ").prop("checked", true).prop("disabled", true);
                        break;
                    case "WRITE":
                        $("#" + base + "_READ").prop("checked", true).prop("disabled", true);
                        break;
                }
                savePermission(splitted[0], splitted[1], splitted[2]);
            }
            else {
                // when unchecking, first next checkbox becomes enabled
                switch (splitted[2]) {
                    case "ADMIN":
                        $("#" + base + "_WRITE").prop("disabled", false);
                        activeCheckedPermissions = "WRITE";
                        break;
                    case "WRITE":
                        $("#" + base + "_READ").prop("disabled", false);
                        activeCheckedPermissions = "READ";
                        break;
                }
                savePermission(splitted[0], splitted[1], activeCheckedPermissions);
            }
        }

    </script>
}