@*
Copyright © 2017 SOFTINUX. All rights reserved.
Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
*@

@using Microsoft.Extensions.Options;
@using Infrastructure;
@inject IOptions<CorporateConfiguration> OptionsApplicationConfiguration

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>@Html.Raw(ViewBag.Title as string)</title>
    @await Component.InvokeAsync("StyleSheets")
</head>
<body>
    @if (User.Identity.IsAuthenticated)
    {
        <header class="header">
            <nav class="navbar navbar-expand-lg navbar-light bg-light justify-content-between">
                <a class="navbar-brand" href="#">
                    <img src="/img/@Html.Raw(OptionsApplicationConfiguration.Value.BrandLogo)" width="30" height="30" alt="" class="brand-logo d-inline-block align-top">
                    <span class="brandlogotext">@Html.Raw(OptionsApplicationConfiguration.Value.Name)</span>
                </a>
                <ul class="nav navbar-nav">
                    <li>
                        <a href="@Url.Action("SignOut", "Account")">
                            Sign Out
                            <span><i class="fa fa-sign-out fa-lg fa-fw" aria-hidden="true"></i></span>
                        </a>
                    </li>
                </ul>
            </nav>
        </header>
    }

    @* Page container *@
    <div class="page-content d-flex align-items-stretch">
        @if (User.Identity.IsAuthenticated)
        {
            <nav class="side-navbar">
                <div class="sidebar-header d-flex align-items-center">
                    @* user badge *@
                    @Html.Partial("_UserTest")
                </div>
                <span>Main</span>
                <div class="" id="navbarSupportedContent">
                    <ul class="list-unstyled">
                        @await Component.InvokeAsync("Menu")
                    </ul>
                </div>
            </nav>
        }
    <div class="inner-content">
        @if (User.Identity.IsAuthenticated)
        {
            <header class="page-header">
                <div class="container-fluid">
                    @RenderSection("title", false)
                </div>
            </header>
        }
        @if (Model != null && !String.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div>
                <div class="alert alert-danger" role="alert">
                    <strong>LOGIN ERROR:</strong>&nbsp;@Html.Raw(Model.ErrorMessage)
                </div>
            </div>
        }
        @RenderBody()
    </div>
    </div>
    @await Component.InvokeAsync("Scripts")
    @if (!User.Identity.IsAuthenticated)
    {
        <script type="text/javascript">
            $("input").keypress(function(event) {
                if (event.which == 13) {
                    event.preventDefault();
                    $("form").submit();
                }
            });
        </script>
    }
</body>
</html>